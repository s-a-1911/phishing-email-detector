import imaplib
import email
from email.header import decode_header
import tkinter as tk
from tkinter import scrolledtext

# üî¥ ENTER YOUR EMAIL & PASSWORD HERE (Use an App Password for Gmail)
EMAIL_USER = "INSERT GMAIL"  
EMAIL_PASS = "INSERT GMAIL APP PASSWORD"  

# Keywords to detect phishing
PHISHING_KEYWORDS = ["urgent", "password", "bank", "click here", "verify", "free", "account locked", "update payment"]

def connect_email():
    """Connects to the email inbox using IMAP."""
    try:
        mail = imaplib.IMAP4_SSL("imap.gmail.com")
        mail.login(EMAIL_USER, EMAIL_PASS)
        mail.select("inbox")
        return mail
    except imaplib.IMAP4.error:
        result_text.set("‚ùå IMAP login failed. Check email/password or enable App Password.")
        return None

def fetch_emails():
    """Fetches emails and updates the UI with results."""
    mail = connect_email()
    if not mail:
        return
    
    _, msg_nums = mail.search(None, "ALL")
    emails = msg_nums[0].split()[-100:]  # Get last 100 emails

    phishing_emails = []
    for num in emails:
        _, msg_data = mail.fetch(num, "(RFC822)")
        for response_part in msg_data:
            if isinstance(response_part, tuple):
                msg = email.message_from_bytes(response_part[1])
                
                # Decode email subject
                subject, encoding = decode_header(msg["Subject"])[0]
                if isinstance(subject, bytes):
                    subject = subject.decode(encoding or "utf-8")

                # Extract sender
                sender = msg.get("From")

                # Get email body
                body = extract_email_body(msg)

                # Check for phishing keywords
                if any(keyword.lower() in body.lower() for keyword in PHISHING_KEYWORDS):
                    phishing_emails.append(f"üî¥ {subject}\n   From: {sender}\n")

    mail.logout()

    # Update UI
    if phishing_emails:
        result_text.set("\n‚ö†Ô∏è  Potential Phishing Emails Found! ‚ö†Ô∏è")
        text_box.delete(1.0, tk.END)
        text_box.insert(tk.END, "\n".join(phishing_emails))
    else:
        result_text.set("‚úÖ No phishing emails detected.")
        text_box.delete(1.0, tk.END)

def extract_email_body(msg):
    """Extracts text content from an email message."""
    body = ""
    if msg.is_multipart():
        for part in msg.walk():
            if part.get_content_type() == "text/plain":
                body = part.get_payload(decode=True).decode(errors="ignore")
                break  
    else:
        body = msg.get_payload(decode=True).decode(errors="ignore")
    return body

# GUI Setup
root = tk.Tk()
root.title("Phishing Email Detector")
root.geometry("500x400")

result_text = tk.StringVar()
result_text.set("Click 'Check Emails' to scan.")

tk.Label(root, text="Phishing Email Detector", font=("Arial", 14, "bold")).pack(pady=10)
tk.Label(root, textvariable=result_text, fg="red").pack()

text_box = scrolledtext.ScrolledText(root, width=60, height=15)
text_box.pack(padx=10, pady=10)

tk.Button(root, text="Check Emails", command=fetch_emails, bg="blue", fg="white").pack(pady=5)

root.mainloop()
